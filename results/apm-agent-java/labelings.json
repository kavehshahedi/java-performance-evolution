{
    "61e5d3ccb2aff1931d0f1eb1559aabace974d2dd": {
        "private int org.HdrHistogram.AbstractHistogram.getCompressedEncodingCookie()": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "private int org.HdrHistogram.AbstractHistogram.getEncodingCookie()": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "ad76bb512b510a37f6a55fdea32f8f3dd3355771": {
        "private int org.HdrHistogram.AbstractHistogram.fillCountsArrayFromSourceBuffer(ByteBuffer sourceBuffer, int lengthInBytes, int wordSizeInBytes)": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "df80115e09dc81ee72f0d1d6d3f95f2ac6a6744c": {
        "public void org.HdrHistogram.WriterReaderPhaser.writerCriticalSectionExit(long criticalValueAtEnter)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "c24ac346a6e66dfcec1e81a9d16e568648bc65c0": {
        "synchronized void org.HdrHistogram.AbstractHistogram.fillBufferFromCountsArray(ByteBuffer buffer, int wordSizeInBytes)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "32e62f68d9e277850807f2b538bcab5971f11a55": {
        "private int org.HdrHistogram.AbstractHistogram.determineWordSizeInBytes()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "private int org.HdrHistogram.AbstractHistogram.fillCountsArrayFromSourceBuffer(ByteBuffer sourceBuffer, int lengthInBytes, int wordSizeInBytes)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "5b6c642badd85b962cd7be09081e4738a9cf2c48": {
        "public HistogramIterationValue org.HdrHistogram.AbstractHistogramIterator.next()": {
            "categories": [
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "4708c3a25fc335e7076f4118ab8fbb43f183debe": {
        "private int org.HdrHistogram.AbstractHistogram.fillCountsArrayFromSourceBuffer(ByteBuffer sourceBuffer, int lengthInBytes, int wordSizeInBytes)": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "72c55e5bee5ed05e47c5f997f8d4bc9d736659d1": {
        "final long org.jctools.queues.MpscArrayQueueConsumerIndexField<E>.lpConsumerIndex()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public int org.jctools.queues.BaseSpscLinkedArrayQueue<E>.fill(Supplier<E> s, int limit)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public final long org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields<E>.lvConsumerIndex()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public int org.jctools.queues.BaseLinkedQueue<E>.drain(Consumer<E> c, int limit)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public final long org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields<E>.lvProducerIndex()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "c048acc8169650fc624c2e9c94ffcce822c11c22": {
        "public boolean org.jctools.queues.intrusive.MpscIntrusiveLinkedQueue.offer(Node node)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "2ac1a663b3a378225ea1269e25b6383751954c4c": {
        "private void org.jctools.queues.InlinedCountersSpscConcurrentArrayQueue<E>.headLazySet(long v)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "private void org.jctools.queues.InlinedCountersSpscConcurrentArrayQueue<E>.tailLazySet(long v)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "13d8ba9a5196b1a8dd867dc992a83edc05d868fb": {
        "public boolean org.jctools.sets.IdentityOpenHashSet<E>.remove(Object val)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change"
            ],
            "functionality_changed": false
        }
    },
    "4a8a432f4d27f3235c54b44b2ee58572612199ee": {
        "public boolean org.jctools.sets.OpenHashSet<E>.contains(Object needle)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        },
        "public boolean org.jctools.sets.OpenHashSet<E>.remove(Object val)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "5279f373a120d3d504d4ea5fad8e1547132b5e96": {
        "private static void org.jctools.channels.proxy.ProxyChannelFactory.implementUserMethod(Method method, ClassVisitor classVisitor, int type, String generatedName, Class<? extends ProxyChannelRingBuffer> backendType)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "d60366d5cdef9091f7dfacb6713fb7fc2b153516": {
        "public int org.jctools.queues.MpmcArrayQueue<E>.fill(Supplier<E> s, int limit)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public int org.jctools.queues.MpmcArrayQueue<E>.drain(Consumer<E> c, int limit)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "9def52951541af24751964bb0cb4f611f50bdca4": {
        "private static void org.jctools.channels.proxy.ProxyChannelFactory.consumerReferenceArrayIndex(MethodVisitor methodVisitor)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "private static void org.jctools.channels.proxy.ProxyChannelFactory.writeRelease(MethodVisitor methodVisitor, int wOffset, int type)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "private static void org.jctools.channels.proxy.ProxyChannelFactory.writeAcquireWithWaitStrategy(MethodVisitor methodVisitor)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "private static void org.jctools.channels.proxy.ProxyChannelFactory.producerReferenceArrayIndex(MethodVisitor methodVisitor)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "private static void org.jctools.channels.proxy.ProxyChannelFactory.implementUserMethod(Method method, ClassVisitor classVisitor, int type)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "f92da3d6919dae506b1e4737c587c6ed03e2eb61": {
        "public static <E> ProxyChannel<E> org.jctools.channels.proxy.ProxyChannelFactory.createProxy(int capacity, Class<E> iFace, WaitStrategy waitStrategy, Class<? extends ProxyChannelRingBuffer> backendType)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "78965db4efd244c428cea9825527f4ab8101ab00": {
        "public int org.jctools.queues.BaseMpscLinkedArrayQueue<E>.fill(Supplier<E> s, int limit)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "33c7774322d46a8d62ba755e2afe645617f03b15": {
        "public int org.jctools.queues.MpscArrayQueue<E>.fill(Supplier<E> s, int limit)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change"
            ],
            "functionality_changed": false
        }
    },
    "8f268d5293dc4701f9637ff393bdce110b2c0603": {
        "public int org.jctools.queues.MpscArrayQueue<E>.fill(Supplier<E> s, int limit)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "3c94b8ccb78e040b9c2a33a04f7dee01286d1658": {
        "protected void org.jctools.counters.FixedSizeStripedLongCounterV6.inc(long offset, long delta)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "efcb60756ad75ef70e8e9ae603cf7c65cd46423d": {
        "public int org.jctools.queues.MpmcArrayQueue<E>.fill(Supplier<E> s, int limit)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        },
        "public int org.jctools.queues.MpmcArrayQueue<E>.drain(Consumer<E> c, int limit)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "9a44566e30a4b1a81a7dde714bcf9c3fff0abb48": {
        "protected final void org.jctools.channels.spsc.SpscOffHeapFixedSizeRingBuffer.writeRelease(long offset)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "protected final void org.jctools.channels.spsc.SpscOffHeapFixedSizeRingBuffer.readRelease(long offset)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "6f88bf5c20ab527d304544cc48fde0b280449b59": {
        "public int org.jctools.queues.MpscUnboundedXaddArrayQueue<E>.drain(Consumer<E> c, int limit)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "ec0f7b287bcc0609fd4201584fa495e92ccc6dc6": {
        "public static <E> ProxyChannel<E> org.jctools.channels.proxy.ProxyChannelFactory.createSpscProxy(int capacity, Class<E> iFace, WaitStrategy waitStrategy)": {
            "categories": [
                "Algorithmic Change"
            ],
            "functionality_changed": true
        }
    },
    "0ef3df124c06efd365de4a1fa20a0bd74b85d9d0": {
        "public static <E> ProxyChannel<E> org.jctools.channels.proxy.ProxyChannelFactory.createSpscProxy(int capacity, Class<E> iFace, WaitStrategy waitStrategy)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "6acb2a1011cacc4b8b379069888cc7395aa68a80": {
        "private Node org.jctools.queues.intrusive.MpscIntrusiveLinkedQueue.xchgHead(Node node)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "534d30d8681c96c5fa9c30de3b4d27776d561d95": {
        "protected static long org.jctools.queues.ConcurrentCircularArrayQueue<E>.calcElementOffset(long index, long mask)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": true
        }
    },
    "f60f4691427c3e5b9516d9bafeff743a1aa98311": {
        "public PropertyFinder<T> org.simpleflatmapper.map.impl.DiscriminatorClassMeta<T>.newPropertyFinder()": {
            "categories": [
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        },
        "public int org.simpleflatmapper.reflect.meta.PropertyMatchingScore.compareTo(PropertyMatchingScore o)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "a859c90db4d0fc1ed9a9ec2129c2252209c49c19": {
        "private static <S1, S2> void org.simpleflatmapper.reflect.asm.BiInstantiatorBuilder.invokeBiFunction(String targetType, InjectionPoint injectionPoint, String classType, Class<?> s1, Class<?> s2, MethodVisitor mv, Consumer<MethodVisitor> consumer, boolean ignoreNullValues)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "b66d0cf74b9089ec0a1085798a216390475d5d61": {
        "protected final AbstractCharConsumer charConsumer(CharBuffer charBuffer)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "46f9e7e1f6fc464aa39b74927f4f338800ee25c0": {
        "public int org.simpleflatmapper.csv.CsvRow.getInt(int i)": {
            "categories": [
                "API/Library Call Changes",
                "Algorithmic Change"
            ],
            "functionality_changed": false
        }
    },
    "e8f193ab649604163023e8fcdb636d00c7fdfa4f": {
        "public void org.simpleflatmapper.csv.CsvRow.addValue(int offset, int length)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "7d4720e003869abf570176bcfa44f94e192f8cb2": {
        "public String org.simpleflatmapper.csv.CsvRow.getString(int i)": {
            "categories": [
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        },
        "public int org.simpleflatmapper.csv.CsvRow.getInt(int i)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "70ea034333aa47e5e54753f764ae4d493f13e03d": {
        "public final void org.simpleflatmapper.csv.parser.CharConsumer.finish(CellConsumer cellConsumer)": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "25d1ed5f7ea750a1d3715ff2f4e483df2778f9d2": {
        "private static <S> KeyDefinition<S, ?> org.simpleflatmapper.map.context.impl.BreakDetector<S>.emptyToNull(KeyDefinition<S, ?> definition)": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "85faa6c792c80ce8a490cb5851934fcc3e04b029": {
        "protected final CharConsumer charConsumer(CharBuffer charBuffer)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "edc1a84529c1904a64f592f5b799b8d8daf30b10": {
        "public static Type org.simpleflatmapper.reflect.asm.AsmUtils.toGenericType(String sig, List<String> genericTypeNames, Type target)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes",
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes",
                "Algorithmic Change"
            ],
            "functionality_changed": false
        }
    },
    "223ed1b2a7424b4fce1d14e7b85875987bcf04ae": {
        "public final <E> PropertyMeta<T, E> org.simpleflatmapper.reflect.meta.PropertyFinder<T>.findProperty(PropertyNameMatcher propertyNameMatcher, Object[] properties, TypeAffinityScorer typeAffinity, PropertyFinderProbe propertyFinderProbe, Predicate<PropertyMeta<?, ?>> propertyFilter)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "bf528f4936c328f2faf621d32003eda5d54b7122": {
        "private CsvCharConsumer charConsumer(CharBuffer charBuffer)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public void org.simpleflatmapper.csv.CsvReader.skipRows(int n)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "678d17d1deee12a08de8c46663b732ad6136827c": {
        "private int org.simpleflatmapper.reflect.meta.DefaultPropertyNameMatcher.lastNonIgnorableChar(String column)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "a094ff893a37c7e3a22c30cff33bb2914e235b0a": {
        "public int org.simpleflatmapper.reflect.meta.PropertyMatchingScore.compareTo(PropertyMatchingScore o)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "9cc6457461a748daa9463727a296b66eea7d7cbc": {
        "public final void org.simpleflatmapper.csv.parser.CharConsumer.finish(CellConsumer cellConsumer)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "protected final CharConsumer charConsumer(CharBuffer charBuffer)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change",
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "34f7275e3ea42c74f313bc106933f9f05b4ee209": {
        "public PropertyMatchingScore org.simpleflatmapper.reflect.meta.PropertyMatchingScore.partialMatch(int score, int pScore)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "ec6da2693c82cfcb006c228a2fd98f533a8deb8e": {
        "public AbstractCharConsumer org.simpleflatmapper.lightningcsv.impl.AsmCharConsumerFactory.newCharConsumer(TextFormat textFormat, CharBuffer charBuffer, CellPreProcessor cellTransformer, boolean specialisedCharConsumer)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "6ef7785ddd157a014f79af09ab8baa750a8e0049": {
        "public PropertyMatchingScore org.simpleflatmapper.reflect.meta.PropertyMatchingScore.matches(String property)": {
            "categories": [
                "Algorithmic Change",
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "45b89c0dc83c4c3535997f408e0bf66061371b2d": {
        "public static void org.simpleflatmapper.reflect.asm.AsmUtils.invoke(MethodVisitor mv, Type target, Method method)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "d16172d3af3931dc7bb93cfcdf533998c1f81913": {
        "private <T> ClassMeta<T> org.simpleflatmapper.reflect.DefaultReflectionService.newClassMeta(Type target)": {
            "categories": [
                "Algorithmic Change",
                "API/Library Call Changes"
            ],
            "functionality_changed": true
        }
    },
    "61e3f299a6ca2e1f779b7a0c83ae7d4a8790aa41": {
        "public static int org.simpleflatmapper.csv.CsvRow.parseInt(char[] chars, int from, int len)": {
            "categories": [
                "Algorithmic Change",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "44c4a25d2add7e3a225ed7167532c1818a2ba3d2": {
        "protected final CharConsumer charConsumer(CharBuffer charBuffer)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "0e437f4397bbb103b89c2609765a503077974109": {
        "public final boolean org.simpleflatmapper.lightningcsv.parser.ReaderCharBuffer.shiftAndRead(int shiftFrom)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": true
        }
    },
    "4f6f6dcde20752e3aae98396559743bc05ca747b": {
        "protected CellPreProcessor getUnescapeCellTransformer(TextFormat textFormat)": {
            "categories": [
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "4829d56226146977e23dde18fd8440edb30d5c5f": {
        "public void org.simpleflatmapper.map.impl.DiscriminatorPropertyFinder<T>.manualMatch(PropertyMeta<?, ?> prop)": {
            "categories": [
                "API/Library Call Changes",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        },
        "private <T> ClassMeta<T> org.simpleflatmapper.map.impl.DiscriminatorReflectionService.newClassMeta(Type target)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "8f6e1fe45273747e755fda6ac82894eaa997c35a": {
        "public final boolean org.simpleflatmapper.lightningcsv.parser.ReaderCharBuffer.shiftAndRead(int shiftFrom)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "b22864d744d2660adbddebcb557a48ac273db923": {
        "public final void org.simpleflatmapper.csv.parser.UnescapeCellPreProcessor.newCell(char[] chars, int start, int end, CellConsumer cellConsumer, int state)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "3b561d28c2bb15b76d2a82d27ebd108ac408b523": {
        "public List<InstantiatorDefinition> org.simpleflatmapper.reflect.DefaultReflectionService.extractInstantiator(Type target, Member extraInstantiator)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "b64fc34917bad69e44e965a4b79112bb9d7885ff": {
        "public static PropertyMatchingScore org.simpleflatmapper.reflect.meta.PropertyMatchingScore.newInstance(boolean selfScoreFullName)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "775dfbc8cedbd250c02078d8a8038e5cb7b404f1": {
        "public static <T> Class<T> org.simpleflatmapper.util.TypeHelper.toClass(Type target)": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "b94104b54b303c70b139aab0667286c0b0b73537": {
        "public void org.simpleflatmapper.map.context.impl.BreakDetector<S>.setValue(Object value)": {
            "categories": [
                "Algorithmic Change"
            ],
            "functionality_changed": true
        },
        "public Object org.simpleflatmapper.map.context.impl.BreakDetector<S>.getValue()": {
            "categories": [
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "3b8283c9af486788c993eccb822fdfb02f37bb91": {
        "public AbstractColumnDefinitionProvider<CsvColumnKey> org.simpleflatmapper.csv.impl.CsvColumnDefinitionProviderImpl.copy()": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "23109fae129db2cbdb0f8315d7fa9449a8ecd238": {
        "public static Type org.simpleflatmapper.reflect.asm.AsmUtils.toGenericType(String sig, List<String> genericTypeNames, Type target)": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "4d222c86c0b794c97f2627afccbb29ad53e22d41": {
        "public final void org.simpleflatmapper.csv.parser.CharConsumer.finish(CellConsumer cellConsumer)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "ae4ea6bcdfd00a147da27a4d2be185185ee33aaa": {
        "public <T> ObjectInstantiator<T> org.objenesis.strategy.SerializingInstantiatorStrategy.newInstantiatorOf(Class<T> type)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "44e2239d3dc569bc99cb6fa3f3bef8df351b2bec": {
        "public <T> ObjectInstantiator<T> org.objenesis.strategy.StdInstantiatorStrategy.newInstantiatorOf(Class<T> type)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "2597f94790d1a4b3891b9b2f3ef0c237071f521e": {
        "private static Object org.objenesis.instantiator.sun.SunReflectionFactoryHelper.createReflectionFactory(Class<?> reflectionFactoryClass)": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        },
        "public <T> ObjectInstantiator<T> org.objenesis.strategy.SerializingInstantiatorStrategy.newInstantiatorOf(Class<T> type)": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "107892d9b8809a5623278e387dec352d0504bc39": {
        "public <T> ObjectInstantiator<T> org.objenesis.strategy.SerializingInstantiatorStrategy.newInstantiatorOf(Class<T> type)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "dcceccbad32b5e43eaaccf40f6d105877cf94bd7": {
        "public <T> ObjectInstantiator<T> org.objenesis.strategy.StdInstantiatorStrategy.newInstantiatorOf(Class<T> type)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "d8e5d780280fe8b1046e6f36793e25fe0744b3b4": {
        "public <T> ObjectInstantiator<T> org.objenesis.strategy.SerializingInstantiatorStrategy.newInstantiatorOf(Class<T> type)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "1b19484ed5a32f3561273ac7ae8eb14ec4a2924b": {
        "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "private void co.elastic.apm.agent.impl.transaction.TraceContext.onMutation()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "d35aeac22221768252bb8d0947caa50e0b4ced40": {
        "public void co.elastic.apm.impl.transaction.Transaction.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, boolean sampled)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Algorithmic Change"
            ],
            "functionality_changed": false
        }
    },
    "349007704a068ab7ca69b4763b7d49bda9410d7c": {
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(TraceContextHolder<?> holder)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.report.ApmServerReporter.report(Span span)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.transaction.Span.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "25eb0dd6c72ea07d7491894d90ef506dda3b98a9": {
        "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "d3837306ede300d13928053571e9b2b54eca1cb5": {
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)": {
            "categories": [
                "API/Library Call Changes",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "50bb1f1632da89c5d4f029e7d7b48a8d4d45c5ef": {
        "public void co.elastic.apm.agent.metrics.MetricSet.resetState()": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        },
        "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.dispatchEvent(ReportingEvent event, long sequence, boolean endOfBatch)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public ReportingEventType co.elastic.apm.agent.report.ReportingEvent.getType()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        },
        "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleIntakeEvent(ReportingEvent event, long sequence, boolean endOfBatch)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "5f2af8f264142c1e5c16698d547499b78529f656": {
        "public Transaction co.elastic.apm.impl.transaction.Transaction.withResult(String result)": {
            "categories": [
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.impl.transaction.Transaction.end()": {
            "categories": [
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "6da304319315cfe4041a8ec5b50cc6f976965eab": {
        "public DynamicType.Builder<?> co.elastic.apm.agent.bci.ElasticApmAgent.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, ProtectionDomain protectionDomain)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "fab4f04c4a19e53849858e3591689f5145067869": {
        "public void co.elastic.apm.agent.impl.context.Destination.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "b2ac746be4d90fe9a7191c9d46f2fb0c364b3799": {
        "private Span co.elastic.apm.agent.impl.transaction.Span.start(long epochMicros, boolean dropped)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "01a5c8cebbf5b06f91e1ebbc614bab6c9d710f11": {
        "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "d27c984f2c916fedd2f89c63c7b53befa3a5714b": {
        "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "0b0082d92686c5ba4fedbc4a251bcefbdbf6b8f8": {
        "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "a837d43aa3fa189c19ae5dadaa4e0e28ae52d97a": {
        "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanType(Span span)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "83167b5d3f319e719539e902e755f0046e9120e7": {
        "public void co.elastic.apm.report.serialize.JacksonPayloadSerializer.serializePayload(BufferedSink sink, Payload payload)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "3cb729ca42e8c3407be34337a4642634f5b6cbfa": {
        "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()": {
            "categories": [
                "Data Structure & Variable Changes",
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)": {
            "categories": [
                "Refactoring & Code Cleanup",
                "Algorithmic Change"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "69656a0a6185c659a0235f96c43bf7b30979a28e": {
        "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)": {
            "categories": [
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        },
        "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.impl.transaction.Span.end()": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "379519e288c037b158ed1850a7d10f19502d06f8": {
        "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "4f732e9eadb0469472d5ee6a40a7a4c157b57b52": {
        "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "0f29fac55461cd1b0386046f03edb08c007832ba": {
        "public void co.elastic.apm.agent.impl.transaction.TraceState.copyFrom(TraceState other)": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.transaction.TraceState.set(double rate, String headerValue)": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "36ff1f18db1c89ec9c2bb185035fa162ce6de9f9": {
        "public static <K, V> WeakConcurrentMap<K, V> co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.createMap()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.agent.impl.context.Url.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        },
        "public Url co.elastic.apm.agent.impl.context.Url.withPort(int port)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "cc4d8a16a7aa85099bcb8b14da0cffb3e37b9d63": {
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "0eac0af814b8686772c6d4e2212f4231524fa8ce": {
        "public ElasticContext<?> co.elastic.apm.agent.impl.ElasticApmTracer.currentContext()": {
            "categories": [
                "Algorithmic Change",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(ElasticContext<?> context)": {
            "categories": [
                "Algorithmic Change"
            ],
            "functionality_changed": false
        },
        "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(ElasticContext<?> context)": {
            "categories": [
                "Algorithmic Change"
            ],
            "functionality_changed": true
        }
    },
    "20be1b23d4d0b7eea18b3c032f8b79bf64a68047": {
        "void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.impl.Span.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "67515c23566ce4885914321e4271adcfa64c7f96": {
        "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.agent.impl.context.AbstractContext.resetState()": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "e306c60534394cc25dedfc0caf5fbff028eea74a": {
        "public void co.elastic.apm.agent.impl.transaction.SpanImpl.resetState()": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "f98c48dfe9e647cf11efa5fe7dda531a28967dcf": {
        "private void co.elastic.apm.agent.impl.ElasticApmTracer.reportSpan(Span span)": {
            "categories": [
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "516f8fb1f8a21e85f38c0333d033011a025f8ed3": {
        "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()": {
            "categories": [
                "Data Structure & Variable Changes",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "7d7f828160f3d63e215321d92182d92e85ddd050": {
        "public void co.elastic.apm.impl.Transaction.recycle()": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.impl.Transaction.resetState()": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "006b2fbbf328dfe6ae9680d12d16efc96b2c0b1b": {
        "public void co.elastic.apm.impl.transaction.Transaction.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "707982892b4f5511abdcea0c0f7214942ad09204": {
        "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, Sampler sampler)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onAfterAnyExecute(StatementInformation statementInformation, long timeElapsedNanos, SQLException e)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        },
        "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction, boolean releaseActiveTransaction)": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        },
        "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()": {
            "categories": [
                "Data Structure & Variable Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "664e4ff4ef9e61b090bad2e3c8e05cb36452b9cd": {
        "public void co.elastic.apm.agent.impl.transaction.Faas.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": true
        },
        "public boolean co.elastic.apm.agent.impl.transaction.Faas.hasContent()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "475b8838387f5f885446e2506bb58e94d62a4f03": {
        "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackTraceElement stacktrace)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "83c698172889d68b49e25da02e9f4693ae8e367e": {
        "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "8e44cb51b862572d08ff6c0e44e5fbb5529fd159": {
        "public void co.elastic.apm.agent.jdbc.signature.Scanner.setQuery(String sql)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": true
        }
    },
    "3e4005dff3c41326dd180bc181dd6821c3c3ff51": {
        "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        },
        "public boolean co.elastic.apm.agent.configuration.ServerlessConfiguration.runsOnAwsLambda()": {
            "categories": [
                "Algorithmic Change",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "e1935ebc4da40cbc4ee4d3b51a671a78b48b3a77": {
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()": {
            "categories": [
                "Algorithmic Change",
                "Exception & Input/Output Handling",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": true
        }
    },
    "00d0da029c941b1d99e151558499069bf58194e5": {
        "public void co.elastic.apm.agent.impl.transaction.Span.decrementReferences()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "ffd15c75971676cbf1c4987ae969acc986ca31c2": {
        "public Object co.elastic.apm.impl.context.Request.getBody()": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "8aaaf6a87be4dd5c172004f309e0f8ddd1f8474a": {
        "private HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest()": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "a4f6c1ce8951f53b5b6306ab43b9de4f13cf5ca8": {
        "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": true
        },
        "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "9448f60455b00ebdf682e24bd5e9759b3e05e734": {
        "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringValue(String value)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "6ea644050e2e4dece55bc382eaf43543aa8df504": {
        "public void co.elastic.apm.impl.error.ErrorCapture.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "86184c5440887feb03d69dda41e30dfc4ce78e34": {
        "public AbstractSpan<?> co.elastic.apm.agent.impl.ElasticApmTracer.getActive()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        },
        "boolean co.elastic.apm.agent.impl.ActiveStack.activate(ElasticContext<?> context, List<ActivationListener> activationListeners)": {
            "categories": [
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "cb870b072523f83c56669ba8f4cabc3b48f79c44": {
        "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.servlet.AbstractServletInstrumentation.getClassLoaderMatcher()": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public Collection<String> co.elastic.apm.agent.servlet.AsyncInstrumentation.getInstrumentationGroupNames()": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "27fbdd1335444fee178531002d8f028f65e15d46": {
        "public void co.elastic.apm.impl.context.Url.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "c852d0a2c1992332bba2a28b013c6042e3bdab7b": {
        "public void co.elastic.apm.agent.collections.WeakMapCleaner.run()": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "076a95b384924e11f5a071ab8654672747b75c66": {
        "protected void co.elastic.apm.agent.impl.transaction.Transaction.afterEnd()": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "a8096b32ec575fb1389b8e1061f9fb77a9fd7d7d": {
        "public void co.elastic.apm.impl.Transaction.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "0a3bafa72c7050d1ca2c5da7999c6ddcd24f7a5a": {
        "public void co.elastic.apm.report.ApmServerReporter.report(Transaction transaction)": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "3365a0e47948355de849535f70120a23115ecacf": {
        "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        },
        "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        },
        "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()": {
            "categories": [
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": true
        }
    },
    "8237da90b6692ec179d6ce07d6a602e1cc4e8172": {
        "public void co.elastic.apm.impl.ElasticApmTracer.releaseActiveTransaction()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "4ab2b6f358eb040df407d830831d9d03a07eef67": {
        "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)": {
            "categories": [
                "Algorithmic Change",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "189c941c2abad8a40ff9bae91441f9318892053d": {
        "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackTraceElement stacktrace)": {
            "categories": [
                "Data Structure & Variable Changes",
                "API/Library Call Changes"
            ],
            "functionality_changed": true
        }
    },
    "043cc50449d53854a9debc427740b420883bec20": {
        "public void co.elastic.apm.impl.transaction.Transaction.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "491da9dd92f172b907589465e6c833ec08adeba7": {
        "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()": {
            "categories": [
                "Data Structure & Variable Changes",
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "30f5f3d1ca7deaadd8e156bea032b4da03e2e2c5": {
        "public void co.elastic.apm.agent.impl.transaction.Id.writeAsHex(JsonWriter jw)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "5a9bfac1e2698b06bb985b0358270022690788eb": {
        "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)": {
            "categories": [
                "API/Library Call Changes"
            ],
            "functionality_changed": false
        }
    },
    "408489e89964222557fa907be57df1efab8ccfbd": {
        "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate(TraceContextHolder<?> deactivatedContext)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "7803818b6d671e7cedd7d88a1590f88b3b3fc96c": {
        "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()": {
            "categories": [
                "Data Structure & Variable Changes",
                "Refactoring & Code Cleanup"
            ],
            "functionality_changed": false
        }
    },
    "796c694d3f9270b5e163d762f39ab7ba50b2df90": {
        "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.beforeActivate(AbstractSpan<?> context)": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": false
        }
    },
    "044b06835157ed6a80071adad3d2dd23cbefe108": {
        "protected void co.elastic.apm.agent.impl.transaction.Transaction.afterEnd()": {
            "categories": [
                "Control Flow/Loop Changes"
            ],
            "functionality_changed": true
        }
    },
    "965c6567186b91c179314570270ebff62a46f130": {
        "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isTraceEnabled()": {
            "categories": [
                "API/Library Call Changes",
                "Exception & Input/Output Handling"
            ],
            "functionality_changed": false
        }
    },
    "f615e69241c9106b5a93b83d65974d8a7e5f0d85": {
        "private static List<String> co.elastic.apm.agent.bci.IndyBootstrap.getClassNamesFromBundledPlugin(String adviceClassName, ClassLoader adviceClassLoader)": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "81494bdfc7e98bc53d12abd98184f6784ab01524": {
        "public void co.elastic.apm.impl.context.Url.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    },
    "246bbd27c7697b639e8830fa25f7f9007f4e1de9": {
        "public void co.elastic.apm.impl.transaction.Span.resetState()": {
            "categories": [
                "Data Structure & Variable Changes"
            ],
            "functionality_changed": false
        }
    }
}